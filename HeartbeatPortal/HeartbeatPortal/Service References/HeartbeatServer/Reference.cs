//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeartBeatPortal.HeartbeatServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServersRequest", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Request")]
    [System.SerializableAttribute()]
    public partial class GetServersRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllServersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllServers {
            get {
                return this.AllServersField;
            }
            set {
                if ((this.AllServersField.Equals(value) != true)) {
                    this.AllServersField = value;
                    this.RaisePropertyChanged("AllServers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServersResponse", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Response")]
    [System.SerializableAttribute()]
    public partial class GetServersResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeartBeatPortal.HeartbeatServer.ServerInfo[] ServerInfoListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeartBeatPortal.HeartbeatServer.ServerInfo[] ServerInfoList {
            get {
                return this.ServerInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerInfoListField, value) != true)) {
                    this.ServerInfoListField = value;
                    this.RaisePropertyChanged("ServerInfoList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerInfo", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.dto")]
    [System.SerializableAttribute()]
    public partial class ServerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServicesRequest", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Request")]
    [System.SerializableAttribute()]
    public partial class GetServicesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllServices {
            get {
                return this.AllServicesField;
            }
            set {
                if ((this.AllServicesField.Equals(value) != true)) {
                    this.AllServicesField = value;
                    this.RaisePropertyChanged("AllServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServicesResponse", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Response")]
    [System.SerializableAttribute()]
    public partial class GetServicesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeartBeatPortal.HeartbeatServer.ServiceInfo[] ServiceInfoListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeartBeatPortal.HeartbeatServer.ServiceInfo[] ServiceInfoList {
            get {
                return this.ServiceInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceInfoListField, value) != true)) {
                    this.ServiceInfoListField = value;
                    this.RaisePropertyChanged("ServiceInfoList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceInfo", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer")]
    [System.SerializableAttribute()]
    public partial class ServiceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ApplicationNamek__BackingFieldField;
        
        private System.DateTime LastHeartBeatDatek__BackingFieldField;
        
        private string ServerNamek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ApplicationName>k__BackingField", IsRequired=true)]
        public string ApplicationNamek__BackingField {
            get {
                return this.ApplicationNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNamek__BackingFieldField, value) != true)) {
                    this.ApplicationNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("ApplicationNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<LastHeartBeatDate>k__BackingField", IsRequired=true)]
        public System.DateTime LastHeartBeatDatek__BackingField {
            get {
                return this.LastHeartBeatDatek__BackingFieldField;
            }
            set {
                if ((this.LastHeartBeatDatek__BackingFieldField.Equals(value) != true)) {
                    this.LastHeartBeatDatek__BackingFieldField = value;
                    this.RaisePropertyChanged("LastHeartBeatDatek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ServerName>k__BackingField", IsRequired=true)]
        public string ServerNamek__BackingField {
            get {
                return this.ServerNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNamek__BackingFieldField, value) != true)) {
                    this.ServerNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("ServerNamek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTopMethodLoadRequest", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Request")]
    [System.SerializableAttribute()]
    public partial class GetTopMethodLoadRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MethodNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MethodNumber {
            get {
                return this.MethodNumberField;
            }
            set {
                if ((this.MethodNumberField.Equals(value) != true)) {
                    this.MethodNumberField = value;
                    this.RaisePropertyChanged("MethodNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTopMethodLoadResponse", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Response")]
    [System.SerializableAttribute()]
    public partial class GetTopMethodLoadResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeartBeatPortal.HeartbeatServer.MethodLoadDetails[] MethodLoadDetailListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeartBeatPortal.HeartbeatServer.MethodLoadDetails[] MethodLoadDetailList {
            get {
                return this.MethodLoadDetailListField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodLoadDetailListField, value) != true)) {
                    this.MethodLoadDetailListField = value;
                    this.RaisePropertyChanged("MethodLoadDetailList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodLoadDetails", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.dto")]
    [System.SerializableAttribute()]
    public partial class MethodLoadDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AverageDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExceptionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExecutionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AverageDuration {
            get {
                return this.AverageDurationField;
            }
            set {
                if ((this.AverageDurationField.Equals(value) != true)) {
                    this.AverageDurationField = value;
                    this.RaisePropertyChanged("AverageDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExceptionCount {
            get {
                return this.ExceptionCountField;
            }
            set {
                if ((this.ExceptionCountField.Equals(value) != true)) {
                    this.ExceptionCountField = value;
                    this.RaisePropertyChanged("ExceptionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExecutionCount {
            get {
                return this.ExecutionCountField;
            }
            set {
                if ((this.ExecutionCountField.Equals(value) != true)) {
                    this.ExecutionCountField = value;
                    this.RaisePropertyChanged("ExecutionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Load {
            get {
                return this.LoadField;
            }
            set {
                if ((this.LoadField.Equals(value) != true)) {
                    this.LoadField = value;
                    this.RaisePropertyChanged("Load");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMethodDetailRequest", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Request")]
    [System.SerializableAttribute()]
    public partial class GetMethodDetailRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMethodDetailResponse", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Response")]
    [System.SerializableAttribute()]
    public partial class GetMethodDetailResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeartBeatPortal.HeartbeatServer.MethodDetails DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeartBeatPortal.HeartbeatServer.MethodDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodDetails", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.dto")]
    [System.SerializableAttribute()]
    public partial class MethodDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstExecutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastExecutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OverallAverageDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalExceptionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalExecutionCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstExecution {
            get {
                return this.FirstExecutionField;
            }
            set {
                if ((this.FirstExecutionField.Equals(value) != true)) {
                    this.FirstExecutionField = value;
                    this.RaisePropertyChanged("FirstExecution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastExecution {
            get {
                return this.LastExecutionField;
            }
            set {
                if ((this.LastExecutionField.Equals(value) != true)) {
                    this.LastExecutionField = value;
                    this.RaisePropertyChanged("LastExecution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OverallAverageDuration {
            get {
                return this.OverallAverageDurationField;
            }
            set {
                if ((this.OverallAverageDurationField.Equals(value) != true)) {
                    this.OverallAverageDurationField = value;
                    this.RaisePropertyChanged("OverallAverageDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalExceptionCount {
            get {
                return this.TotalExceptionCountField;
            }
            set {
                if ((this.TotalExceptionCountField.Equals(value) != true)) {
                    this.TotalExceptionCountField = value;
                    this.RaisePropertyChanged("TotalExceptionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalExecutionCount {
            get {
                return this.TotalExecutionCountField;
            }
            set {
                if ((this.TotalExecutionCountField.Equals(value) != true)) {
                    this.TotalExecutionCountField = value;
                    this.RaisePropertyChanged("TotalExecutionCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMethodDurationOrCountRequest", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Request")]
    [System.SerializableAttribute()]
    public partial class GetMethodDurationOrCountRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MethodNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeField, value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MethodNumber {
            get {
                return this.MethodNumberField;
            }
            set {
                if ((this.MethodNumberField.Equals(value) != true)) {
                    this.MethodNumberField = value;
                    this.RaisePropertyChanged("MethodNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMethodDurationorCountResponse", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Response")]
    [System.SerializableAttribute()]
    public partial class GetMethodDurationorCountResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeartBeatPortal.HeartbeatServer.AverageOrDurationDetails[] DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeartBeatPortal.HeartbeatServer.AverageOrDurationDetails[] Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AverageOrDurationDetails", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.dto")]
    [System.SerializableAttribute()]
    public partial class AverageOrDurationDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AverageDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExecutionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExecutionTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AverageDuration {
            get {
                return this.AverageDurationField;
            }
            set {
                if ((this.AverageDurationField.Equals(value) != true)) {
                    this.AverageDurationField = value;
                    this.RaisePropertyChanged("AverageDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExecutionCount {
            get {
                return this.ExecutionCountField;
            }
            set {
                if ((this.ExecutionCountField.Equals(value) != true)) {
                    this.ExecutionCountField = value;
                    this.RaisePropertyChanged("ExecutionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExecutionTime {
            get {
                return this.ExecutionTimeField;
            }
            set {
                if ((this.ExecutionTimeField.Equals(value) != true)) {
                    this.ExecutionTimeField = value;
                    this.RaisePropertyChanged("ExecutionTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMethodsOfServiceRequest", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Request")]
    [System.SerializableAttribute()]
    public partial class GetMethodsOfServiceRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMethodsOfServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/HeartbeatServer.Response")]
    [System.SerializableAttribute()]
    public partial class GetMethodsOfServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeartBeatPortal.HeartbeatServer.MethodDetails[] MethodListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeartBeatPortal.HeartbeatServer.MethodDetails[] MethodList {
            get {
                return this.MethodListField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodListField, value) != true)) {
                    this.MethodListField = value;
                    this.RaisePropertyChanged("MethodList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HeartbeatServer.IHeartbeatServer")]
    public interface IHeartbeatServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetServers", ReplyAction="http://tempuri.org/IHeartbeatServer/GetServersResponse")]
        HeartBeatPortal.HeartbeatServer.GetServersResponse GetServers(HeartBeatPortal.HeartbeatServer.GetServersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetServers", ReplyAction="http://tempuri.org/IHeartbeatServer/GetServersResponse")]
        System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetServersResponse> GetServersAsync(HeartBeatPortal.HeartbeatServer.GetServersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetServices", ReplyAction="http://tempuri.org/IHeartbeatServer/GetServicesResponse")]
        HeartBeatPortal.HeartbeatServer.GetServicesResponse GetServices(HeartBeatPortal.HeartbeatServer.GetServicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetServices", ReplyAction="http://tempuri.org/IHeartbeatServer/GetServicesResponse")]
        System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetServicesResponse> GetServicesAsync(HeartBeatPortal.HeartbeatServer.GetServicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetTopMethods", ReplyAction="http://tempuri.org/IHeartbeatServer/GetTopMethodsResponse")]
        HeartBeatPortal.HeartbeatServer.GetTopMethodLoadResponse GetTopMethods(HeartBeatPortal.HeartbeatServer.GetTopMethodLoadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetTopMethods", ReplyAction="http://tempuri.org/IHeartbeatServer/GetTopMethodsResponse")]
        System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetTopMethodLoadResponse> GetTopMethodsAsync(HeartBeatPortal.HeartbeatServer.GetTopMethodLoadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetMethodDetails", ReplyAction="http://tempuri.org/IHeartbeatServer/GetMethodDetailsResponse")]
        HeartBeatPortal.HeartbeatServer.GetMethodDetailResponse GetMethodDetails(HeartBeatPortal.HeartbeatServer.GetMethodDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetMethodDetails", ReplyAction="http://tempuri.org/IHeartbeatServer/GetMethodDetailsResponse")]
        System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetMethodDetailResponse> GetMethodDetailsAsync(HeartBeatPortal.HeartbeatServer.GetMethodDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetTopMethodDurationOrCount", ReplyAction="http://tempuri.org/IHeartbeatServer/GetTopMethodDurationOrCountResponse")]
        HeartBeatPortal.HeartbeatServer.GetMethodDurationorCountResponse GetTopMethodDurationOrCount(HeartBeatPortal.HeartbeatServer.GetMethodDurationOrCountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetTopMethodDurationOrCount", ReplyAction="http://tempuri.org/IHeartbeatServer/GetTopMethodDurationOrCountResponse")]
        System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetMethodDurationorCountResponse> GetTopMethodDurationOrCountAsync(HeartBeatPortal.HeartbeatServer.GetMethodDurationOrCountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetMethodsOfService", ReplyAction="http://tempuri.org/IHeartbeatServer/GetMethodsOfServiceResponse")]
        HeartBeatPortal.HeartbeatServer.GetMethodsOfServiceResponse GetMethodsOfService(HeartBeatPortal.HeartbeatServer.GetMethodsOfServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatServer/GetMethodsOfService", ReplyAction="http://tempuri.org/IHeartbeatServer/GetMethodsOfServiceResponse")]
        System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetMethodsOfServiceResponse> GetMethodsOfServiceAsync(HeartBeatPortal.HeartbeatServer.GetMethodsOfServiceRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHeartbeatServerChannel : HeartBeatPortal.HeartbeatServer.IHeartbeatServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HeartbeatServerClient : System.ServiceModel.ClientBase<HeartBeatPortal.HeartbeatServer.IHeartbeatServer>, HeartBeatPortal.HeartbeatServer.IHeartbeatServer {
        
        public HeartbeatServerClient() {
        }
        
        public HeartbeatServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HeartbeatServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HeartbeatServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HeartbeatServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HeartBeatPortal.HeartbeatServer.GetServersResponse GetServers(HeartBeatPortal.HeartbeatServer.GetServersRequest request) {
            return base.Channel.GetServers(request);
        }
        
        public System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetServersResponse> GetServersAsync(HeartBeatPortal.HeartbeatServer.GetServersRequest request) {
            return base.Channel.GetServersAsync(request);
        }
        
        public HeartBeatPortal.HeartbeatServer.GetServicesResponse GetServices(HeartBeatPortal.HeartbeatServer.GetServicesRequest request) {
            return base.Channel.GetServices(request);
        }
        
        public System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetServicesResponse> GetServicesAsync(HeartBeatPortal.HeartbeatServer.GetServicesRequest request) {
            return base.Channel.GetServicesAsync(request);
        }
        
        public HeartBeatPortal.HeartbeatServer.GetTopMethodLoadResponse GetTopMethods(HeartBeatPortal.HeartbeatServer.GetTopMethodLoadRequest request) {
            return base.Channel.GetTopMethods(request);
        }
        
        public System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetTopMethodLoadResponse> GetTopMethodsAsync(HeartBeatPortal.HeartbeatServer.GetTopMethodLoadRequest request) {
            return base.Channel.GetTopMethodsAsync(request);
        }
        
        public HeartBeatPortal.HeartbeatServer.GetMethodDetailResponse GetMethodDetails(HeartBeatPortal.HeartbeatServer.GetMethodDetailRequest request) {
            return base.Channel.GetMethodDetails(request);
        }
        
        public System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetMethodDetailResponse> GetMethodDetailsAsync(HeartBeatPortal.HeartbeatServer.GetMethodDetailRequest request) {
            return base.Channel.GetMethodDetailsAsync(request);
        }
        
        public HeartBeatPortal.HeartbeatServer.GetMethodDurationorCountResponse GetTopMethodDurationOrCount(HeartBeatPortal.HeartbeatServer.GetMethodDurationOrCountRequest request) {
            return base.Channel.GetTopMethodDurationOrCount(request);
        }
        
        public System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetMethodDurationorCountResponse> GetTopMethodDurationOrCountAsync(HeartBeatPortal.HeartbeatServer.GetMethodDurationOrCountRequest request) {
            return base.Channel.GetTopMethodDurationOrCountAsync(request);
        }
        
        public HeartBeatPortal.HeartbeatServer.GetMethodsOfServiceResponse GetMethodsOfService(HeartBeatPortal.HeartbeatServer.GetMethodsOfServiceRequest request) {
            return base.Channel.GetMethodsOfService(request);
        }
        
        public System.Threading.Tasks.Task<HeartBeatPortal.HeartbeatServer.GetMethodsOfServiceResponse> GetMethodsOfServiceAsync(HeartBeatPortal.HeartbeatServer.GetMethodsOfServiceRequest request) {
            return base.Channel.GetMethodsOfServiceAsync(request);
        }
    }
}
